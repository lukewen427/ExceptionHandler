/* =================================================================
 *                     conneXience Data Pipeline
 * =================================================================
 *
 * Copyright 2006 Hugo Hiden and Adrian Conlin
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details. 
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

package org.pipeline.gui.data.streaming;
import org.pipeline.gui.data.io.*;
import org.pipeline.gui.data.table.*;
import org.pipeline.core.data.*;
import org.pipeline.core.data.io.*;

import javax.swing.*;
import java.awt.*;

/**
 * This class provides a panel for configuring a streaming data import
 * object.
 * @author  hugo
 */
public class StreamingDataImportEditor extends javax.swing.JPanel {
    /** Data importer */
    private DelimitedTextDataStreamImporter importer;
    
    
    /** Creates new form StreamingDataImportEditor */
    public StreamingDataImportEditor(DelimitedTextDataStreamImporter importer) {
        initComponents();
        this.importer = importer;
        displaySettings();
        displayFirstChunk();
    }
    
    /** Display all settings */
    private void displaySettings(){
        if(importer!=null){
            chunkSize.setText(Integer.toString(importer.getChunkSize()));
        }
    }
    
    /** Update the chunk size */
    private void updateChunkSize(){
        if(importer!=null){
            try {
                importer.setChunkSize(Integer.parseInt(chunkSize.getText()));
                displayFirstChunk();
            } catch (Exception e){
            }
        }
    }
    
    /** Try an import the fist chunk and display it */
    private void displayFirstChunk(){
        if(importer!=null){
            try {
                importer.importTopChunk();
                dataPreview.setModel(new DataTableModel(importer.getTopChunk()));
            } catch (Exception e){
                // TODO: Better error
                e.printStackTrace();
            }
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        chunkSize = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        defineButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataPreview = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout(5, 0));

        chunkSize.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                chunkSizeFocusLost(evt);
            }
        });
        chunkSize.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                chunkSizeKeyPressed(evt);
            }
        });

        jPanel1.add(chunkSize, java.awt.BorderLayout.CENTER);

        jLabel1.setText(java.util.ResourceBundle.getBundle("org/pipeline/gui/data/resource/Bundle").getString("CHUNK_SIZE"));
        jLabel1.setPreferredSize(new java.awt.Dimension(150, 15));
        jPanel1.add(jLabel1, java.awt.BorderLayout.WEST);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        defineButton.setText(java.util.ResourceBundle.getBundle("org/pipeline/gui/data/resource/Bundle").getString("DEFINE"));
        defineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defineButtonActionPerformed(evt);
            }
        });

        jPanel4.add(defineButton);

        jPanel3.add(jPanel4, java.awt.BorderLayout.CENTER);

        jLabel2.setText(java.util.ResourceBundle.getBundle("org/pipeline/gui/data/resource/Bundle").getString("DEFINE_IMPORT"));
        jLabel2.setPreferredSize(new java.awt.Dimension(150, 15));
        jPanel3.add(jLabel2, java.awt.BorderLayout.WEST);

        jPanel1.add(jPanel3, java.awt.BorderLayout.SOUTH);

        jPanel1.add(jPanel5, java.awt.BorderLayout.NORTH);

        add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(java.util.ResourceBundle.getBundle("org/pipeline/gui/data/resource/Bundle").getString("PREVIEW")));
        dataPreview.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(dataPreview);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);

    }// </editor-fold>//GEN-END:initComponents

    /** Update chunk size */
    private void chunkSizeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_chunkSizeFocusLost
        updateChunkSize();
    }//GEN-LAST:event_chunkSizeFocusLost

    /** Update chunk size */
    private void chunkSizeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chunkSizeKeyPressed
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            updateChunkSize();
        }
    }//GEN-LAST:event_chunkSizeKeyPressed

    /** Configure an import object */
    private void defineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defineButtonActionPerformed
        // Create a temporary importer
        DelimitedTextDataImporter tempImport = new DelimitedTextDataImporter();
        tempImport.copySettings(importer);
        
        boolean tempLimit = importer.isLimitRows();
        tempImport.setLimitRows(true);
        
        int tempEndRow = importer.getDataEndRow();
        tempImport.setDataEndRow(50);
        
        // Show in a dialog
        Object[] components = new Object[1];
        Data importedData = new Data();
        components[0] = new DelimitedTextImportPanel(tempImport);
        ((DelimitedTextImportPanel)components[0]).setPreferredSize(new Dimension(600, 450));
        
        String[] buttons = {"OK", "Cancel"};
        int result = JOptionPane.showOptionDialog(null, components, "Import Data", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, new ImageIcon(), buttons, buttons[0]);
        if(result==JOptionPane.OK_OPTION){

            // Copy the settings back
            importer.copySettings(tempImport);
            importer.setLimitRows(false);
            importer.setDataEndRow(tempEndRow);
            
            // Try and import the first chunk and display it
            displayFirstChunk();
        }
    }//GEN-LAST:event_defineButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField chunkSize;
    private javax.swing.JTable dataPreview;
    private javax.swing.JButton defineButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
}
