/* =================================================================
 *                     conneXience Data Pipeline
 * =================================================================
 *
 * Copyright 2006 Hugo Hiden and Adrian Conlin
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details. 
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

package org.pipeline.gui.xmlstorage.xmldatatypes;
import org.pipeline.gui.xmlstorage.*;
import org.pipeline.core.xmlstorage.*;
import org.pipeline.core.xmlstorage.xmldatatypes.*;

/**
 * This class allows the editing of any numerical data object
 * @author  hugo
 */
public class XmlNumericalDataObjectEditor extends javax.swing.JPanel implements XmlDataObjectEditor {
    /** Data object being edited */
    private XmlDataObject editedObject = null;
    
    /** Caption width */
    private int captionWidth = 0;
    
    /** Creates new form XmlNumericalDataObjectEditor */
    public XmlNumericalDataObjectEditor() {
        initComponents();
    }

    /** Set the object being edited */
    public void setObject(XmlDataObject object) {
        editedObject = object;
        if(editedObject!=null){
            nameLabel.setText(editedObject.getName());
            displayValue();
            setBorder(new javax.swing.border.TitledBorder(editedObject.getDescription()));
        }
    }

    /** Set caption width */
    public void setCaptionWidth(int captionWidth) {
        this.captionWidth = captionWidth;
        resizeComponents();
    }

    /** Update the edited object */
    public void updateValue() {
        if(editedObject!=null){
            // parse value properly
            try {
                if(editedObject instanceof XmlDoubleDataObject){
                    ((XmlDoubleDataObject)editedObject).setDoubleValue(Double.parseDouble(valueField.getText()));

                } else if(editedObject instanceof XmlIntegerDataObject){
                    ((XmlIntegerDataObject)editedObject).setIntValue(Integer.parseInt(valueField.getText()));
                    
                } else if(editedObject instanceof XmlLongDataObject){
                    ((XmlLongDataObject)editedObject).setLongValue(Long.parseLong(valueField.getText()));
                    
                }
                
            } catch (Exception e){
                displayValue();
            }
        }
    }
    
    /** Reset the edited value */
    public void resetValue(){
        displayValue();
    }
    
    /** Set the parent editor window */
    public void setParent(XmlDataStoreEditor parent){
    }
    
    /** The helper data for this object has changed */
    public void helperDataChanged() {
    }
    
    /** Display the correct value */
    private void displayValue(){
        if(editedObject instanceof XmlDoubleDataObject){
            valueField.setText(Double.toString(((XmlDoubleDataObject)editedObject).doubleValue()));

        } else if(editedObject instanceof XmlIntegerDataObject){
            valueField.setText(Integer.toString(((XmlIntegerDataObject)editedObject).intValue()));

        } else if(editedObject instanceof XmlLongDataObject){
            valueField.setText(Long.toString(((XmlLongDataObject)editedObject).longValue()));

        } else {
            valueField.setText("Invalid object");
        }               
    }
    
    /** Resize all the components */
    private void resizeComponents(){
        java.awt.Dimension d = nameLabel.getPreferredSize();
        nameLabel.setPreferredSize(new java.awt.Dimension(captionWidth, 20));
    }    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        valueField = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        add(jPanel1, java.awt.BorderLayout.NORTH);

        add(jPanel2, java.awt.BorderLayout.SOUTH);

        nameLabel.setText("jLabel1");
        jPanel3.add(nameLabel);

        add(jPanel3, java.awt.BorderLayout.WEST);

        jPanel4.setLayout(new java.awt.BorderLayout());

        valueField.setText("jTextField1");
        jPanel4.add(valueField, java.awt.BorderLayout.CENTER);

        add(jPanel4, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField valueField;
    // End of variables declaration//GEN-END:variables
    
}
