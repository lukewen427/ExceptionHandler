/* =================================================================
 *                     conneXience Data Pipeline
 * =================================================================
 *
 * Copyright 2006 Hugo Hiden and Adrian Conlin
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details. 
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

package org.pipeline.gui.xmlstorage.xmldatatypes;

import org.pipeline.gui.xmlstorage.*;
import org.pipeline.core.xmlstorage.*;
import org.pipeline.core.xmlstorage.xmldatatypes.*;

import org.w3c.dom.*;
import java.io.*;

/**
 * This panel edits an XmlDocument in an XmlDataStore
 * @author  hugo
 */
public class XmlXmlDataObjectEditor extends javax.swing.JPanel implements XmlDataObjectEditor {
    /** XmlDataObject being edited */
    private XmlXmlDataObject xmlObject = null;
    
    /** Label caption width */
    private int captionWidth = 0;
    
    /** New XmlDocument */
    private Document oldDocument = null;
    
    /** Creates new form XmlXmlDataObjectEditor */
    public XmlXmlDataObjectEditor() {
        initComponents();
    }

    /** Set the object being edited */
    public void setObject(XmlDataObject object) {
        xmlObject = (XmlXmlDataObject)object;
        if(xmlObject!=null){
            nameLabel.setText(xmlObject.getName());
            valueField.setText(xmlObject.toString());
            setBorder(new javax.swing.border.TitledBorder(xmlObject.getDescription()));
            oldDocument = xmlObject.xmlDocumentValue();
        }
    }

    /** Set caption width */
    public void setCaptionWidth(int captionWidth) {
        this.captionWidth = captionWidth;
        resizeComponents();
    }

    /** Update the edited object */
    public void updateValue() {

    }
    
    /** Set the parent editor window */
    public void setParent(XmlDataStoreEditor parent){
    }
    
    /** Reset the edited value */
    public void resetValue(){
        /*
        valueField.setText(stringObject.stringValue());
         */
    }
    
    /** The helper data for this object has changed */
    public void helperDataChanged() {
    }
    
    /** Resize all the components */
    private void resizeComponents(){
        java.awt.Dimension d = nameLabel.getPreferredSize();
        nameLabel.setPreferredSize(new java.awt.Dimension(captionWidth, 20));
    }    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        loadButton = new javax.swing.JButton();
        valueField = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        setBorder(new javax.swing.border.TitledBorder("XML Data"));
        add(jPanel1, java.awt.BorderLayout.NORTH);

        add(jPanel2, java.awt.BorderLayout.SOUTH);

        nameLabel.setText("jLabel1");
        jPanel3.add(nameLabel);

        add(jPanel3, java.awt.BorderLayout.WEST);

        jPanel4.setLayout(new java.awt.BorderLayout());

        loadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/goldproject/gui/common/resource/Open16.gif")));
        loadButton.setToolTipText("Load an XML file");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        jPanel4.add(loadButton, java.awt.BorderLayout.EAST);

        valueField.setText("jLabel1");
        valueField.setBorder(new javax.swing.border.EtchedBorder());
        jPanel4.add(valueField, java.awt.BorderLayout.CENTER);

        add(jPanel4, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents

    /** Load an XML file */
    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        if(xmlObject!=null){
            javax.swing.JFileChooser chooser = new javax.swing.JFileChooser();
            int result = chooser.showOpenDialog(this);
            if(result==javax.swing.JFileChooser.APPROVE_OPTION){
                File file = chooser.getSelectedFile();
                if(file!=null){
                    try {
                        xmlObject.readXmlFromFile(file);
                        valueField.setText(xmlObject.toString());
                    } catch (Exception e){
                        javax.swing.JOptionPane.showMessageDialog(this, "Error importing XML file: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                }
                
            }
        }
    }//GEN-LAST:event_loadButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton loadButton;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel valueField;
    // End of variables declaration//GEN-END:variables
    
}
