/* =================================================================
 *                     conneXience Data Pipeline
 * =================================================================
 *
 * Copyright 2006 Hugo Hiden and Adrian Conlin
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details. 
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

package org.pipeline.gui.xmlstorage.xmldatatypes;
import org.pipeline.gui.xmlstorage.*;
import org.pipeline.core.xmlstorage.*;
import org.pipeline.core.xmlstorage.xmldatatypes.*;
import org.pipeline.core.data.*;
import org.pipeline.core.data.manipulation.*;
import org.pipeline.gui.data.manipulation.*;

/**
 * This class provides an editor for a ColumnPicker object.
 * @author  hugo
 */
public class XmlColumnPickerDataObjectEditor extends javax.swing.JPanel implements XmlDataObjectEditor {
    /** Object referenced as an XmlStorable object */
    private XmlStorableDataObject dataObject;
    
    /** Column picker object */
    private ColumnPicker picker;
    
    /** Column picker editor panel */
    private SmallColumnPickerConfigPanel pickerConfig;
    
    /** Width of caption */
    private int captionWidth = 0;
    
    /** Parent container */
    private XmlDataStoreEditor parent;
    
    /** Creates new form XmlColumnPickerDataObjectEditor */
    public XmlColumnPickerDataObjectEditor() {
        initComponents();
        pickerConfig = new SmallColumnPickerConfigPanel();
        pickerHolder.add(pickerConfig, java.awt.BorderLayout.CENTER);
    }
    
    /** Set the object being edited */
    public void setObject(XmlDataObject object) {
        dataObject = (XmlStorableDataObject)object;
        if(dataObject.getClassName().equals("org.pipeline.core.data.manipulation.ColumnPicker")){
            picker = (ColumnPicker)dataObject.getValue();
        } else {
            picker = null;
        }
        pickerConfig.setPicker(picker);
        setBorder(new javax.swing.border.TitledBorder(dataObject.getDescription()));     
        findMetaData();
    }
    
    /** Update the object */
    public void updateValue() {
        pickerConfig.updatePicker();
        try {
            dataObject.repersistObject();
        } catch (Exception e){
        }
    }
 
    /** Reset the edited value back to its original value */
    public void resetValue() {
    }
    
    /** Set the width of the caption */
    public void setCaptionWidth(int captionWidth) {
    }
    
    /** Set the parent editor window */
    public void setParent(XmlDataStoreEditor parent){
        this.parent = parent;
    }
    
    /** The helper data for this object has changed */
    public void helperDataChanged() {
        findMetaData();
    }
    
    /** Update the pickers meta-data from the helper object if there is one */
    private void findMetaData(){
        if(parent!=null && dataObject!=null && pickerConfig!=null){
            Object helper = parent.getHelperObject(dataObject.getName());
            if(helper instanceof DataMetaData){
                pickerConfig.setMetaData((DataMetaData)helper);
                pickerConfig.configureGui();
            }
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        pickerHolder = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        setBorder(new javax.swing.border.TitledBorder("Column Picker Object:"));
        pickerHolder.setLayout(new java.awt.BorderLayout());

        add(pickerHolder, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.NORTH);

        add(jPanel3, java.awt.BorderLayout.SOUTH);

        add(jPanel4, java.awt.BorderLayout.EAST);

        add(jPanel1, java.awt.BorderLayout.WEST);

    }
    // </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel pickerHolder;
    // End of variables declaration//GEN-END:variables
    
}
